/*
 * Copyright 2020 Ren Binden
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.tools.ant.filters.ReplaceTokens

def repoUserName = ""
def repoPassword = ""
def propertiesFile = new File("repo.properties")
if (propertiesFile.exists()) {
    def properties = new Properties()
    properties.load(new FileInputStream(propertiesFile))
    repoUserName = properties.getProperty("repo-username")
    repoPassword = properties.getProperty("repo-password")
}

dependencies {
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: "1.3.72"
    implementation group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: "1.3.72"
    implementation group: "org.spigotmc", name: "spigot-api", version: "1.14.4-R0.1-SNAPSHOT"
    implementation group: "org.bstats", name: "bstats-bukkit", version: "1.7"
    implementation group: "org.apache.velocity", name: "velocity", version: "1.7"
    implementation group: "org.jooq", name: "jooq", version: "3.13.2"
    implementation group: "org.eclipse.jetty", name: "jetty-server", version: "9.4.29.v20200521"
    implementation group: "org.eclipse.jetty", name: "jetty-servlet", version: "9.4.29.v20200521"
    implementation group: "org.eclipse.jetty", name: "jetty-webapp", version: "9.4.29.v20200521"
    implementation group: "org.eclipse.jetty.websocket", name: "websocket-server", version: "9.4.29.v20200521"
    implementation group: "jep", name: "jep", version: "2.24"
    implementation (group: "net.dv8tion", name: "JDA", version: "4.1.1_155") {
        exclude module: "opus-java"
    }
    implementation project(":rpk-core")
}

processResources {
    filter ReplaceTokens, tokens: [
            "version": version
    ]
}

apply plugin: "com.github.johnrengelman.shadow"

shadowJar {

    dependencies {
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8"))
        include(dependency("org.jetbrains.kotlin:kotlin-reflect"))
        include(dependency("org.bstats:bstats-bukkit"))
        include(dependency("org.apache.velocity:velocity"))
        include(dependency("org.jooq:jooq"))
        include(dependency("org.eclipse.jetty:jetty-server"))
        include(dependency("org.eclipse.jetty:jetty-servlet"))
        include(dependency("org.eclipse.jetty:jetty-webapp"))
        include(dependency("org.eclipse.jetty.websocket:websocket-server"))
        include(dependency("jep:jep"))
        include(dependency("net.dv8tion:JDA"))
        include(project(":rpk-core"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
        include(dependency("org.jetbrains.kotlin:kotlin-runtime"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk7"))
        include(dependency("javax.servlet:javax.servlet-api"))
        include(dependency("org.eclipse.jetty:jetty-util"))
        include(dependency("org.eclipse.jetty:jetty-http"))
        include(dependency("org.eclipse.jetty:jetty-io"))
        include(dependency("org.eclipse.jetty:jetty-security"))
        include(dependency("org.ehcache:ehcache"))
        include(dependency("com.zaxxer:HikariCP"))
        include(dependency("org.eclipse.jetty.websocket:websocket-servlet"))
        include(dependency("org.eclipse.jetty.websocket:websocket-api"))
        include(dependency("org.eclipse.jetty.websocket:websocket-common"))
        include(dependency("org.reactivestreams:reactive-streams"))
        include(dependency("com.google.code.findbugs:jsr305"))
        include(dependency("org.jetbrains:annotations"))
        include(dependency("org.slf4j:slf4j-api"))
        include(dependency("com.neovisionaries:nv-websocket-client"))
        include(dependency("com.squareup.okhttp3:okhttp"))
        include(dependency("com.squareup.okio:okio"))
        include(dependency("org.apache.commons:commons-collections4"))
        include(dependency("net.sf.trove4j:trove4j"))
        include(dependency("com.fasterxml.jackson.core:jackson-core"))
        include(dependency("com.fasterxml.jackson.core:jackson-annotations"))
        include(dependency("com.fasterxml.jackson.core:jackson-databind"))
        include(dependency("com.google.code.gson:gson"))
        include(dependency("com.google.errorprone:error_prone_annotations"))
        include(dependency("com.google.guava:guava"))
        include(dependency("com.google.protobuf:protobuf-java"))
        include(dependency("commons-codec:commons-codec"))
        include(dependency("commons-collections:commons-collections"))
        include(dependency("commons-io:commons-io"))
        include(dependency("commons-lang:commons-lang"))
        include(dependency("com.sun.istack:istack-commons-runtime"))
        include(dependency("com.sun.xml.fastinfoset:FastInfoset"))
        include(dependency("javax.xml.bind:jaxb-api"))
        include(dependency("org.jvnet.staxex:stax-ex"))
        include(dependency("org.kohsuke:github-api"))
        include(dependency("org.pircbotx:pircbotx"))
        include(dependency("org.slf4j:slf4j-jdk14"))
        include(dependency("org.xerial:sqlite-jdbc"))
        include(dependency("org.apache.commons:commons-lang3"))
        include(dependency("org.checkerframework:checker-qual"))
        include(dependency("org.eclipse.jetty:jetty-client"))
        include(dependency("org.eclipse.jetty.websocket:websocket-client"))
        include(dependency("org.eclipse.jetty:jetty-xml"))
        include(dependency("mysql:mysql-connector-java"))
        include(dependency("org.glassfish.jaxb:jaxb-runtime"))
        include(dependency("javax.activation:javax.activation-api"))
        include(dependency("com.google.guava:failureaccess"))
        include(dependency("org.glassfish.jaxb:txw2"))
        include(dependency("com.google.guava:listenablefuture"))
    }

    relocate "org.bstats", "com.rpkit.core.bukkit.shadow.org.bstats"

}

artifacts {
    archives shadowJar
}

uploadArchives {
    repositories.mavenDeployer {

        repository(url: "https://repo.rpkit.com/repository/maven-releases/") {
            authentication(userName: repoUserName, password: repoPassword)
        }

        pom.version = project(":bukkit:rpk-core-bukkit").version
        pom.artifactId = project(":bukkit:rpk-core-bukkit").name
        pom.groupId = project(":bukkit:rpk-core-bukkit").group

    }
}